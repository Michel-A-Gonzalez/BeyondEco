import pandas as pd
import numpy as np
import plotly.graph_objects as go
import plotly.express as px

# Chosen model
from sklearn import tree

# Needed preprocessing objects
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import GridSearchCV
from sklearn.pipeline import Pipeline
from sklearn.model_selection import train_test_split

# Used to check accuracy of model
from sklearn.metrics import accuracy_score

# List of special characters to delete from Descriptions

special_char = ["'",
                '.',
                '!'
]

# needed UHCU cards to keep track of individual spenfing behaviour

uchu_cards = ['0718 M',
              '3341 M',
              '4969 M',
              '0001 M',
              '2675 M',
              '2272 M',
              '9031 M',
]

# Used to referecne the card number in the algorithm

cards_number = ['0718',
                '3341',
                '4969',
                '0001',
                '2675',
                '2272',
                '9031',
]

# Name of each company we have a transaction with

Descriptions = ['Deposit',
                '7-Eleven',
                'A & A AutoMechanic',
                'ABC Home',
                'ADP',
                'AT&T',
                'AT&amp;T',
                'ATM',
                'ATT',
                'AVR',
                'Academy Sports',
                'Adobe AcroPro',
                'Advance Auto',
                'Aggieland',
                'Alamo Specialty Pharmacy',
                'AllState',
                'Ally',
                'Amazon',
                'American Bolt',
                'American Gen',
                'American Gen Life',
                'Amex',
                'Amzn',
                'Aplus Outdoor',
                'Apple',
                'Atmos Energy',
                'Audible',
                'Austin Bergstorm',
                'Austin Family Medicine',
                'Austin Tire Man',
                'Austin rent Way',
                'Austin-Bergstrom',
                'Automechanic',
                'BBB',
                'BBQ',
                'BCBS Health',
                'BKAmerica',
                'Barton Creek Soccer',
                'Batteries Plus',
                'Bella Sera',
                'Blaze Pizza',
                'Bolt',
                'Breed &amp',
                "Buc-ee's",
                'Buenos Aires Cafe',
                'Burpy Market',
                'Bushs Chicken',
                'C Store',
                'C Store Marble Falls',
                'CSC Servicework',
                'CVS',
                'Capital One',
                'Caporales Meat',
                'Car Unlock',
                'Car Wash',
                'CareNow',
                'CefCo',
                'Champions School',
                'Charity',
                'Chase Credit',
                'Check',
                'Chevron',
                'Chick-Fil-A',
                'China Cafe',
                'Chipotle',
                'Cinemark',
                'Cinepolis',
                'Circle K',
                'Citi',
                'Citizens',
                'City of Austin',
                'City of Cedar Park',
                'City of Leander',
                'City of San Antonio',
                'Clip It',
                'Cookies',
                'Copper Ridge Market',
                'Costco',
                'Crate & Barrel',
                'Crate &amp',
                'CrateBarrel',
                'Cricket',
                'Crime Rec',
                'Culligan',
                'Custom Trailers',
                'DSW Cedar Park',
                'Dairy Queen',
                'DashPass',
                'Derm Partners',
                'Diamond Rental',
                'Discount Tire',
                'Discover',
                'Dog Waste Depot',
                'Dollar-General',
                'Doordash',
                'DutchBros',
                'El Pollo Rico',
                'El Rancho',
                'El Rinconcito',
                'Estancia Brazilian',
                'Expedia',
                'Express Food',
                'ExxonMobil',
                'FWB Cedar Park',
                'FYF',
                'Fajita Petes',
                'Farmers',
                'Fee',
                'Fees',
                'Financial Pacif',
                'Fish Daddys',
                'Fncl Pacific',
                'Forever Briar Fore',
                'Formula1',
                'Fortiva',
                'Fuel Maxx',
                'Gattis Pizza',
                "Gig'em Food",
                'Glorias Restaurant',
                'Golden Chick',
                'Grainger',
                'Grand Donuts',
                'Guaco Taco',
                'Gusto',
                'H & R Grocery',
                'H Food Mart',
                'H-E-B #',
                'H-E-B Gas',
                'H-E-B Online',
                'H20 Hand Car Wash',
                'Harmony Dental',
                'Health Care Serv',
                'HiTechPower',
                'Home DePot',
                'Hopdoddy',
                'Hp Instant Ink',
                'Humana',
                'IH 35 Lots',
                'IRS',
                'Ilarios Italian',
                'In N Out',
                'Innovative Urgent Care',
                'Instant Ink',
                'Intuit',
                'Jack Brown Cleaners',
                'Jiffy Lube',
                'Jimmy Johns',
                'Juanitas College',
                'Kerbey Lane Cafe',
                'Kim Paper',
                'Kristy R. Cortez',
                'Kristy R. Cortez',
                'Kroger',
                'LSCC Seton',
                'La Chaparita',
                'La Chaparrita Meat',
                'La Margarita',
                'La Mexicana',
                'Labcorp',
                'Lake Austin',
                'Lake Line Food',
                'Lake Line Food',
                'LakeLine Xpress Mart',
                'Lambs Tire',
                'Landfill',
                'Laundry',
                'Laundry & Dry',
                'Laz Parking',
                'Leander Express Lube',
                'Leander ISD',
                'Leander Stores',
                'Left Hand Design',
                'LendingClub',
                'Lincoln NatLife',
                'Llano Co',
                'Loan 00',
                'Loan 02',
                'LongHorn Trailers',
                'Lotus Hunan',
                "Lowe's",
                'Lowes',
                "Luby's",
                'Lupe Tortilla',
                'M Vince Nail Spa',
                'MCW308-WHiteStone',
                'MDVIP',
                'Marcos Pizza',
                "McDonald's",
                'Mi Tiendita',
                'Mi Tradicion',
                'Microsoft',
                'Mighty Fine Burgers',
                'Mini Mania',
                'Mod Pizza',
                'Msft',
                'Municipal Court',
                'Municipal Online Payments',
                'Murphy Express',
                'NWS 2nd Street',
                'National Bank',
                'Navient',
                'NinaBerenato',
                'Northern Tool',
                "O'Reilly Auto Parts",
                "O'Rielly Auto",
                'OBGYN',
                'Office DePot',
                'Office Max',
                'Oil Changers',
                'P. Terrys',
                'ParkWhiz',
                'Pedernales Elect',
                'Pharmacy',
                'PintHouse Pizza',
                'Pizza Hut',
                'Platinum Research',
                'Poco Loco',
                'Popeyes',
                'Pro Serve Ent',
                'QT',
                'Quinta Caoirales Meat',
                'R Grocery',
                'RBFCU',
                'RMA Toll',
                "Raising Cane's",
                'Randall Fuel',
                'Randalls',
                'Real Estate',
                'Refuel',
                'Renken Dentistry',
                'Rockdale Valero',
                'Rosas Cafe',
                'S and S Computer',
                'SBA Loan',
                'SP Choice',
                'Safe and Lock',
                'SaltGrass',
                'Sams Club',
                'Samsclub',
                'Sana Vida Wellness',
                'Shell Oil',
                'Shell Service',
                'Short Stop',
                'Sky Asian Fusion',
                'Smalls',
                'Snack Vending',
                'Snax Max',
                'Soda Snack vendign Austin',
                'Southside Market',
                'Star Stop',
                'Sunbit',
                'Sunoco',
                'Surf and Turf',
                'Syncb Payment',
                'Synchrony Bank',
                'TAMU',
                'Taco Bell',
                'Taco Blvd',
                'Taco Cabana',
                'Taqueria',
                'Taquitos West',
                'Target',
                'Tasco Auto',
                'Tax',
                'Tennant Company',
                'Texaco',
                'Texas Hone',
                'Texas Mutual',
                'Texas Roadhouse',
                'TexasGasService',
                'The Cromeens Law',
                'The Garden',
                'The Guardian',
                'Thrall Food',
                "Tiff's Treats",
                'Tires.com-online-orde',
                'Titan School Solutions',
                'Transfer to share 00',
                'Travis Co WCID No 10',
                'TxTag',
                'UPS Store',
                'USCraft LLC',
                'USP Store',
                'Unpaid',
                'Urgent Care',
                'UrgentCare',
                'Valero',
                'Vazquez Tacos',
                'Venmo',
                'Vivint',
                'Wal-Mart',
                'Walgreens',
                'Walmart',
                'Wells Fargo',
                'WhatABurger',
                'Whittlesey',
                'WholFds',
                'Wholefds',
                'Williamson Co',
                'WingStop',
                'Wm Supercenter',
                'withdrawal cash',
                'withdrawal courtesy pay-ach',
                'Food Mart Austin',
                'USPS',
                'Avetta',
                'Old Town News',
                'Unipago',
                'Rudys',
                'United Rentals',
                'ACH Credit',
                'Nothing Bundt Cakes',
                'Donut Taco Palace',
                'Ville Fresh Itali',
                'HEB Online',
                'Wpyseoteric',
                'Llantera Ibarra',
                'Dollar Tree',
                'Rubbish',
                'Terry Sayther Automotive',
                'Shake Shack',
                'Olive Garden',
                'Taconmaye',
                'Ranasar',
                'Go Carwash',
                'He-Government',
                'Withdrawal Courtesy Pay'
]
 
Descriptions.sort()

Descriptions

# Dictionary to deal with companies with different spellings in transaction data

des_dic = { 'AT&T':'At&t',
            'AT&amp;T':'At&t',
            'ATT':'At&t',
            'American Gen':'Amercian General',
            'American Gen Life':'Amercian General',
            'Amex':'American Express',
            'Amzn':'Amazon',
            'Aplus Outdoor':'A Plus Outdoor',
            'Austin-Bergstrom':'Austin Bergstrom',
            'Automechanic':'Auto Mechanic',
            'BCBS Health':'Blue Cross Blue Shield',
            'BKAmerica':'Bank of America',
            'C Store Marble Falls':'C Store',
            'Cookies':'Great American Cookies',
            'Crate &amp':'Crate & Barrel',
            'CrateBarrel':'Crate & Barrel',
            'DutchBros':'Dutch Bros',
            'ExxonMobil':'Exxon Mobil',
            'Fees':'Fees',
            'Financial Pacif':'Financial Pacific',
            'Fncl Pacific':'Financial Pacific',
            'american cookies':'Great American Cookies',
            'Hp Instant Ink': 'Hp Ink',
            'Instant Ink':'Hp Ink',
            'La Chaparrita Meat':'La Chaparita',
            'Laundry & Dry':'Laundry',
            'Lincoln NatLife':'Lincoln Natural',
            "Lowe's":'Lowes',
            'Msft':'Microsoft',
            'MCW308-WHiteStone':'H-E-B #',
            "O'Reilly Auto Parts":'O Rielly Auto',
            "O'Rielly Auto":'O Rielly Auto',
            'Texas Hone':'Texas Honey Ham',
            'TexasGasService': 'Texas Gas',
            'Tires.com-online-orde': 'Tires',
            'Transfer to share 00' : 'Loan 00',
            'Travis Co WCID No 10':'Water Service',
            'TxTag':'Texas Tag',
            'Unpaid':'Fee',
            'UrgentCare':'Urgent Care',
            'Wal-Mart':'Walmart',
            'WholFds':'Whole Foods',
            'Wholefds':'Whole Foods',
            'Wm Supercenter':'Walmart',
}
trans_type = {'Auto Maintenance':'B',
              'Credit Card':'B',
              'Fees':'B',
              'Food':'P',
              'Gas':'B',
              'Groceries':'P',
              'Insurance':'B',
              'Labor':'B',
              'Loan':'B',
              'Medical':'P',
              'Phone/Internet':'B',
              'Professional Services':'B',
              'Recreational':'P',
              'Revenue':'B',
              'Software':'B',
              'Supplies':'B',
              'Tax':'B',
              'Utilities':'P',
              'Withdrawal':'B',
}

monthly = { 'Auto Maintenance':'N',
            'Credit Card':'Y',
            'Fees':'N',
            'Food':'N',
            'Gas':'N',
            'Groceries':'N',
            'Insurance':'Y',
            'Labor':'Y',
            'Loan':'N',
            'Medical':'N',
            'Phone/Internet':'Y',
            'Professional Services':'N',
            'Recreational':'N',
            'Revenue':'Y',
            'Software':'Y',
            'Supplies':'N',
            'Tax':'Y',
            'Utilities':'Y',
            'Withdrawal':'N',
}

# Accesses the non modefied banking information from 04/01/2022 to 09/19/2022

df = pd.read_csv('https://raw.githubusercontent.com/Michel-A-Gonzalez/BeyondEco/main/Banking%20Data%20UHCU.csv')

df = df[df['Credit'] != 0].reset_index(drop = True)

# Drops uncessecary columns

df = df.drop(columns = ['Account Number', 'Check', 'Status', 'Balance'])

# Gets the cards columns from the descriptions

for i in range(0, len(uchu_cards)):

  df.loc[df['Description'].str.contains(uchu_cards[i]), 'Cards'] = cards_number[i]

# needed to replace the 2272 card with 3341

df.loc[(df['Cards'] == '2272'), 'Cards'] = '3341'

df = df.fillna(0)

df['Description'] = df['Description'].str.lower()

df['Description'] = df['Description'].apply(lambda x: x.replace("*",''))

df['Description'] = df['Description'].apply(lambda x: x.replace("/",' '))

for i in range(0, len(Descriptions)):
  
  df.loc[df['Description'].str.contains(Descriptions[i].lower()), 'Description'] = Descriptions[i]

for i in des_dic.keys():

  df.loc[df['Description'].str.contains(i), 'Description'] = des_dic[i]

df['Description'] = df['Description'].apply(lambda x: x.replace("'",''))

df['Description'] = df['Description'].apply(lambda x: x.replace(".",''))

for i in purch_type.keys():

  df.loc[df['Description'].str.contains(i), 'Purchase Type'] = purch_type[i]

for i in trans_type.keys():

  df.loc[df['Purchase Type'].str.contains(i), 'Transaction Type'] = trans_type[i]

for i in trans_type.keys():

  df.loc[df['Purchase Type'].str.contains(i), 'Monthly'] = monthly[i]
  
X = df[['Description']]

y = df[['Purchase Type']]

encoder = OrdinalEncoder()

X = encoder.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)

clf = tree.DecisionTreeClassifier(criterion = 'entropy',max_depth=15)

clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

accuracy_score(y_test, y_pred)

# Validator

pipe = Pipeline(steps = [
                        #  ('scale', StandardScaler()),
                         ('model', clf),
                        ]
                )


depth = [i for i in range(1,41)]

model = GridSearchCV(estimator = pipe,
                     param_grid ={'model__max_depth' : depth},
                     cv = 10
             )

model.fit(X_train, y_train)

mod_df = pd.DataFrame(model.cv_results_)

fig = go.Figure()

fig.add_traces(go.Scatter(x = mod_df['param_model__max_depth'],
                          y = mod_df['mean_test_score'],
                          mode = 'lines+markers',
                          marker_color = 'darkgreen',
                          )
)

fig.update_layout(xaxis_title = 'Max Depth',
                  yaxis_title = 'Mean Score',
                  title = 'Decision Tree validation',
)

new_df = pd.read_csv('https://raw.githubusercontent.com/Michel-A-Gonzalez/BeyondEco/main/AccountHistory.csv')

new_df

new_df = new_df[new_df['Credit'] != 0].reset_index(drop = True)

# Drops uncessecary columns

new_df = new_df.drop(columns = ['Account Number', 'Check', 'Status', 'Balance'])

# Gets the cards columns from the descriptions

for i in range(0, len(uchu_cards)):

  new_df.loc[new_df['Description'].str.contains(uchu_cards[i]), 'Cards'] = cards_number[i]

# needed to replace the 2272 card with 3341

new_df.loc[(new_df['Cards'] == '2272'), 'Cards'] = '3341'

new_df = new_df.fillna(0)

new_df['Description'] = new_df['Description'].str.lower()

new_df['Description'] = new_df['Description'].apply(lambda x: x.replace("*",''))

new_df['Description'] = new_df['Description'].apply(lambda x: x.replace("/",' '))

for i in range(0, len(Descriptions)):
  
  new_df.loc[new_df['Description'].str.contains(Descriptions[i].lower()), 'Description'] = Descriptions[i]

for i in des_dic.keys():

  new_df.loc[new_df['Description'].str.contains(i), 'Description'] = des_dic[i]

new_df['Description'] = new_df['Description'].apply(lambda x: x.replace("'",''))

new_df['Description'] = new_df['Description'].apply(lambda x: x.replace(".",''))

X_new = new_df[['Description']]

X_new = X_new.loc[~X_new['Description'].isin(['Breed &amp', 'RMA Toll', 'SP Choice', 
                                              'Taquitos West', 'Venmo', 'National Bank', 
                                              'Refuel', 'Laz Parking', 'NWS 2nd Street', 
                                              'CSC Servicework', 'Leander Stores', 'Custom Trailers', 
                                              'Llano Co', 'Samsclub', 'SQ Diamond', 'Labcorp', 
                                              'BBB', 'Pharmacy', 'Tasco Auto', 'LSCC Seton', 
                                              'Poco Loco', 'SQ Platinum', 'Juanitas College'])
]

X_new = encoder.transform(X_new)

purchase_type = clf.predict(X_new)

new_purch = new_df.loc[~new_df['Description'].isin([ 'Breed &amp', 'RMA Toll', 'SP Choice', 
                                                  'Taquitos West', 'Venmo', 'National Bank', 
                                                  'Refuel', 'Laz Parking', 'NWS 2nd Street', 
                                                  'CSC Servicework', 'Leander Stores', 'Custom Trailers', 
                                                  'Llano Co', 'Samsclub', 'SQ Diamond', 'Labcorp', 
                                                  'BBB', 'Pharmacy', 'Tasco Auto', 'LSCC Seton', 
                                                  'Poco Loco', 'SQ Platinum', 'Juanitas College'
                                                  ]
                                                )
]

missing_purch = new_df.loc[new_df['Description'].isin([ 'Breed &amp', 'RMA Toll', 'SP Choice', 
                                                  'Taquitos West', 'Venmo', 'National Bank', 
                                                  'Refuel', 'Laz Parking', 'NWS 2nd Street', 
                                                  'CSC Servicework', 'Leander Stores', 'Custom Trailers', 
                                                  'Llano Co', 'Samsclub', 'SQ Diamond', 'Labcorp', 
                                                  'BBB', 'Pharmacy', 'Tasco Auto', 'LSCC Seton', 
                                                  'Poco Loco', 'SQ Platinum', 'Juanitas College'
                                                  ]
                                                )
]

new_purch['Purchase Type'] = purchase_type

for i in trans_type.keys():

  new_purch.loc[new_purch['Purchase Type'].str.contains(i), 'Transaction Type'] = trans_type[i]

for i in trans_type.keys():

  new_purch.loc[new_purch['Purchase Type'].str.contains(i), 'Monthly'] = monthly[i]
  
new_df = df.append(new_purch)

new_df = new_df.append(missing_purch)

new_df['Post Date'] = new_df['Post Date'].apply(lambda x : pd.to_datetime(x, format="%m/%d/%Y"))

new_df = new_df.sort_values(by='Post Date').reset_index(drop=True)

new_df.value_counts('Purchase Type')

new_df.to_excel('output.xlsx')
